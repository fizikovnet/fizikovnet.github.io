<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Geek Notes]]></title>
  <link href="http://fizikovnet.github.io/atom.xml" rel="self"/>
  <link href="http://fizikovnet.github.io/"/>
  <updated>2015-03-15T22:33:56+03:00</updated>
  <id>http://fizikovnet.github.io/</id>
  <author>
    <name><![CDATA[fizikovnet]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Выборка данных SQL. Операторы SELECT, in, BETWEEN, LIKE, GROUP by и HAVING]]></title>
    <link href="http://fizikovnet.github.io/posts/2015/03/vyborka-dannykh-sql-opieratory-select.html"/>
    <updated>2015-03-15T21:23:26+03:00</updated>
    <id>http://fizikovnet.github.io/posts/2015/03/vyborka-dannykh-sql-opieratory-select</id>
    <content type="html"><![CDATA[<p>В данном конспекте рассмотрим как производится выборка данных из базы с помощью оператора SELECT. Использование DISTINCT. Операторы сравнения и логические операторы применяемые в предложении WHERE. А также операторы IN, BETWEEN и LIKE. Агрегатные функции типа COUNT(), AVG() и т.д. И рассмотрим применение операторов GROUP BY и HAVING.</p>

<!-- more -->


<p>И так простейшая выборка данных осуществляется оператором SELECT:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span>  <span class="k">table_name</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Для выбора не повторяющихся значений в столбцах применяется ключевое слово DISTINCT:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="k">DISTINCT</span> <span class="o">*</span> <span class="k">FROM</span>  <span class="k">table_name</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>DISTINCT применяется ко всем столбцам указанным в операторе SELECT</p></blockquote>

<p>Для фильтрования выборки используется предложение <strong>WHERE</strong>, после которого описывается предикат.</p>

<p>В предложении <strong>WHERE</strong> могут использоваться следующие операторы:</p>

<ul>
<li><p><em>Операторы сравнения:</em> =, >, &lt;, >=, &lt;=, &lt;>. Если в в выражении будет вычислен NULL, то результатом будет UNKNOWN.</p></li>
<li><p><em>Логические операторы:</em> - OR, AND, NOT могут принимать три значения: TRUE, FALSE и UNKNOWN.</p></li>
<li><p>IN — оператор перечисления:</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">Salespeople</span>
</span><span class='line'><span class="k">WHERE</span>  <span class="n">city</span> <span class="k">IN</span> <span class="p">(</span><span class="s1">&#39;Barcelona&#39;</span><span class="p">,</span> <span class="s1">&#39;London&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>BETWEEN — выбор из диапазона:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">Salespeople</span>
</span><span class='line'><span class="k">WHERE</span>  <span class="n">comm</span> <span class="k">BETWEEN</span> <span class="p">.</span><span class="mi">10</span> <span class="k">AND</span> <span class="p">.</span><span class="mi">20</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>LIKE — оператор поиска подстрок в текстах. В шаблонах используются два символа: &lsquo;_&rsquo; (соответствует одному символу) и &lsquo;%&rsquo; (соответствует любому символу, даже его отсутствие).</p></li>
<li><p>IS NULL и IS NOT NULL — проверка на NULL.</p></li>
</ul>


<h2>Агрегатные функции.</h2>

<p>Агрегатные функции применяются сразу для всей группы столбцов, которые были выбраны, и вычисляет для них единственное значение.</p>

<p><em>Список всех агрегатных функций:</em></p>

<ul>
<li>COUNT — количество строк или не пустых значений (не NULL):</li>
<li>SUM — сумма значений</li>
<li>AVG — среднее арифметическое:</li>
<li>MAX — максимально значений</li>
<li>MIN — минимально значений</li>
</ul>


<h3>Применение GROUP BY и HAVING.</h3>

<p><strong>GROUP BY</strong> позволяет выделить из отдельного столбца группы значений этого столбца и применить у ним агрегатную функцию.
 Допустим, есть у нас такая таблица:</p>

<p><img src="http://fizikovnet.github.io/images/img_2015_03/12.png" alt="" /></p>

<p>При выполнении следующего запроса, сначала все выбранные строки группируются по одинаковому значению в поле City, затем к каждой группе применяется агрегатная функция MAX():</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="n">Cnum</span><span class="p">,</span> <span class="n">Cname</span><span class="p">,</span> <span class="n">City</span><span class="p">,</span> <span class="k">MAX</span><span class="p">(</span> <span class="n">Rating</span> <span class="p">)</span>
</span><span class='line'><span class="k">FROM</span> <span class="n">Customers</span>
</span><span class='line'><span class="k">GROUP</span> <span class="k">BY</span> <span class="n">City</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>Результат:</em></p>

<p><img src="http://fizikovnet.github.io/images/img_2015_03/13.png" alt="" /></p>

<p>Так как предложение WHERE фильтрует строки до того как они попадут в группы, т.е. до применения GROUP BY, то его использовать не возможно, если нам надо задать условие для всей группы. Для этого есть оператор <strong>HAVING</strong>, который похож на WHERE только задает фильтр сразу к группе.</p>

<p>Допустим, есть следующая таблица:</p>

<p><img src="http://fizikovnet.github.io/images/img_2015_03/14.png" alt="" /></p>

<p>При выполнении следующего запроса, сначала все строки группируются по одинаковым сочетаиням значений в полях Snum и  Odate, а затем, к каждой группе применяет опертор MAX():</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="n">Snum</span><span class="p">,</span> <span class="n">Odate</span><span class="p">,</span> <span class="k">MAX</span><span class="p">(</span> <span class="n">Amt</span> <span class="p">)</span>
</span><span class='line'><span class="k">FROM</span> <span class="n">Orders</span>
</span><span class='line'><span class="k">GROUP</span> <span class="k">BY</span> <span class="n">Snum</span><span class="p">,</span> <span class="n">Odate</span>
</span><span class='line'><span class="k">HAVING</span> <span class="k">MAX</span><span class="p">(</span> <span class="n">Amt</span> <span class="p">)</span> <span class="o">&gt;</span> <span class="mi">3000</span><span class="p">.</span><span class="mi">00</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>Результат:</em></p>

<p><img src="http://fizikovnet.github.io/images/img_2015_03/15.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Типы данных и операторы определения данных SQL]]></title>
    <link href="http://fizikovnet.github.io/posts/2015/03/tipy-dannykh-i-opieratory-opriedielieniia-dannykh-sql-data-definition-language.html"/>
    <updated>2015-03-09T18:48:30+03:00</updated>
    <id>http://fizikovnet.github.io/posts/2015/03/tipy-dannykh-i-opieratory-opriedielieniia-dannykh-sql-data-definition-language</id>
    <content type="html"><![CDATA[<p>В данном конспекте рассмотрим основные типы данных SQL а также операторы операторы определения данных (Data Definition Language, DDL), которые позволяют создавать, изменять и удалять объекты базы данных (таблицы, представления и т.п.)</p>

<!-- more -->


<h2>Типы данных SQL</h2>

<p>В SQL существуют следующие четыре группы типов данных:</p>

<h3>Числовые:</h3>

<p><strong>Целые:</strong></p>

<ul>
<li>TINYINT[] - 1 байт</li>
<li>SMALLINT[] - 2 байта</li>
<li>MEDIUMINT[] - 3 байта</li>
<li>INT[] - 4 байта</li>
<li>BIGINT[] - 8 байт</li>
</ul>


<p><code>В квадратных скобках указывается количество выводимых символов</code></p>

<p><strong>С плавающей точкой:</strong></p>

<ul>
<li>FLOAT[M, D] - 4 байта</li>
<li>DOUBLE[M, D] (REAL, DOUBLE PRECISION) - 8 байт</li>
<li>DECIMAL[M, D] (DEC, NUMERIC) - M + 2 байта</li>
</ul>


<p><code>В квадратных скобках указывается количество под мантиссу и экспоненту</code></p>

<p><strong>Бинарные:</strong></p>

<ul>
<li>BOOLEAN - 1 байт (алиас для tinyint)</li>
<li>BIT</li>
</ul>


<h3>Строковые:</h3>

<ul>
<li>CHAR(M) - M - кол-во символов, строка фиксированной длины</li>
<li>VARCHAR(M) - строка переменной длины</li>
<li>TINYBLOB, TINYTEXT - 2<sup>8</sup> - 1 символов</li>
<li>BLOB, TEXT - 2<sup>16</sup> - 1 символов</li>
<li>MEDIUMBLOB, MEDIUMTEXT - 2<sup>24</sup> - 1 символов</li>
<li>LONGBLOB, LONGTEXT - 2<sup>32</sup> - 1 символов</li>
<li>ENUM(‘value1’, ‘value2’&hellip;) - 1 или 2 байта, 65536 допустимых значений</li>
<li>SET(‘value1’, ‘value2’&hellip;) - 1,2,3,4 или 8 байт, 64 элемента может принимать несколько значений из этого множества</li>
</ul>


<p><code>Главное различие char и varchar: для char сразу выделяется место под максимальное количество символов, что повышает эффективность поиска но увеличивает расход дискового пространнства.</code></p>

<h3>Календарные:</h3>

<ul>
<li>DATE - 3 байта, от “1000-01-01” до “9999-12-31”</li>
<li>TIME - 3 байта, от “-828:59:59” до “828:59:59”</li>
<li>DATETIME - 8 байт, от “1000-01-01 00:00:00” до “9999-12-31 59:59:59”</li>
<li>TIMESTAMP - 4 байта, от “1970-01-01 00:00:00” до “2038-12-31 59:59:59” хранится количество секунд от 1970 года</li>
<li>YEAR - 1 байт, YEAR(4) c 1901 до 2155; YEAR(2) c 1970 до 2069</li>
</ul>


<h3>NULL:</h3>

<ul>
<li>при конкатенации cтрок с NULL все превращается в NULL.</li>
<li>любые проверки операторами &lt;, > =, &lt;> дают false</li>
<li>COUNT(поле) - считает кол-во не NULL строк, хотя COUNT(*) считает все строки включая NULL</li>
</ul>


<h2>Оператор CREATE</h2>

<p>Общая сигнатура такова:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'>  <span class="k">CREATE</span> <span class="p">[</span><span class="k">TEMPORARY</span><span class="p">]</span> <span class="k">TABLE</span> <span class="p">[</span><span class="n">IF</span> <span class="k">NOT</span> <span class="k">EXISTS</span><span class="p">]</span> <span class="n">tbl_name</span>
</span><span class='line'>      <span class="p">(</span><span class="n">create_definition</span><span class="p">,...)</span>
</span><span class='line'>      <span class="p">[</span><span class="n">table_options</span><span class="p">]</span>
</span><span class='line'>      <span class="p">[</span><span class="n">partition_options</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Где create_definition:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'>      <span class="n">col_name</span> <span class="n">column_definition</span>
</span><span class='line'>    <span class="o">|</span> <span class="p">[</span><span class="k">CONSTRAINT</span> <span class="p">[</span><span class="n">symbol</span><span class="p">]]</span> <span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="p">[</span><span class="n">index_type</span><span class="p">]</span> <span class="p">(</span><span class="n">index_col_name</span><span class="p">,...)</span>
</span><span class='line'>        <span class="p">[</span><span class="n">index_option</span><span class="p">]</span> <span class="p">...</span>
</span><span class='line'>    <span class="o">|</span> <span class="err">{</span><span class="k">INDEX</span><span class="o">|</span><span class="k">KEY</span><span class="err">}</span> <span class="p">[</span><span class="n">index_name</span><span class="p">]</span> <span class="p">[</span><span class="n">index_type</span><span class="p">]</span> <span class="p">(</span><span class="n">index_col_name</span><span class="p">,...)</span>
</span><span class='line'>        <span class="p">[</span><span class="n">index_option</span><span class="p">]</span> <span class="p">...</span>
</span><span class='line'>    <span class="o">|</span> <span class="p">[</span><span class="k">CONSTRAINT</span> <span class="p">[</span><span class="n">symbol</span><span class="p">]]</span> <span class="k">UNIQUE</span> <span class="p">[</span><span class="k">INDEX</span><span class="o">|</span><span class="k">KEY</span><span class="p">]</span>
</span><span class='line'>        <span class="p">[</span><span class="n">index_name</span><span class="p">]</span> <span class="p">[</span><span class="n">index_type</span><span class="p">]</span> <span class="p">(</span><span class="n">index_col_name</span><span class="p">,...)</span>
</span><span class='line'>        <span class="p">[</span><span class="n">index_option</span><span class="p">]</span> <span class="p">...</span>
</span><span class='line'>    <span class="o">|</span> <span class="err">{</span><span class="n">FULLTEXT</span><span class="o">|</span><span class="n">SPATIAL</span><span class="err">}</span> <span class="p">[</span><span class="k">INDEX</span><span class="o">|</span><span class="k">KEY</span><span class="p">]</span> <span class="p">[</span><span class="n">index_name</span><span class="p">]</span> <span class="p">(</span><span class="n">index_col_name</span><span class="p">,...)</span>
</span><span class='line'>        <span class="p">[</span><span class="n">index_option</span><span class="p">]</span> <span class="p">...</span>
</span><span class='line'>    <span class="o">|</span> <span class="p">[</span><span class="k">CONSTRAINT</span> <span class="p">[</span><span class="n">symbol</span><span class="p">]]</span> <span class="k">FOREIGN</span> <span class="k">KEY</span>
</span><span class='line'>        <span class="p">[</span><span class="n">index_name</span><span class="p">]</span> <span class="p">(</span><span class="n">index_col_name</span><span class="p">,...)</span> <span class="n">reference_definition</span>
</span><span class='line'>    <span class="o">|</span> <span class="k">CHECK</span> <span class="p">(</span><span class="n">expr</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Где column_definition:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'>  <span class="n">data_type</span> <span class="p">[</span><span class="k">NOT</span> <span class="k">NULL</span> <span class="o">|</span> <span class="k">NULL</span><span class="p">]</span> <span class="p">[</span><span class="k">DEFAULT</span> <span class="n">default_value</span><span class="p">]</span>
</span><span class='line'>        <span class="p">[</span><span class="n">AUTO_INCREMENT</span><span class="p">]</span> <span class="p">[</span><span class="k">UNIQUE</span> <span class="p">[</span><span class="k">KEY</span><span class="p">]</span> <span class="o">|</span> <span class="p">[</span><span class="k">PRIMARY</span><span class="p">]</span> <span class="k">KEY</span><span class="p">]</span>
</span><span class='line'>        <span class="p">[</span><span class="k">COMMENT</span> <span class="s1">&#39;string&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="p">[</span><span class="n">COLUMN_FORMAT</span> <span class="err">{</span><span class="n">FIXED</span><span class="o">|</span><span class="k">DYNAMIC</span><span class="o">|</span><span class="k">DEFAULT</span><span class="err">}</span><span class="p">]</span>
</span><span class='line'>        <span class="p">[</span><span class="k">STORAGE</span> <span class="err">{</span><span class="n">DISK</span><span class="o">|</span><span class="n">MEMORY</span><span class="o">|</span><span class="k">DEFAULT</span><span class="err">}</span><span class="p">]</span>
</span><span class='line'>        <span class="p">[</span><span class="n">reference_definition</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Где reference_definition:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'>  <span class="k">REFERENCES</span> <span class="n">tbl_name</span> <span class="p">(</span><span class="n">index_col_name</span><span class="p">,...)</span>
</span><span class='line'>        <span class="p">[</span><span class="k">MATCH</span> <span class="k">FULL</span> <span class="o">|</span> <span class="k">MATCH</span> <span class="k">PARTIAL</span> <span class="o">|</span> <span class="k">MATCH</span> <span class="k">SIMPLE</span><span class="p">]</span>
</span><span class='line'>        <span class="p">[</span><span class="k">ON</span> <span class="k">DELETE</span> <span class="n">reference_option</span><span class="p">]</span>
</span><span class='line'>        <span class="p">[</span><span class="k">ON</span> <span class="k">UPDATE</span> <span class="n">reference_option</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Где reference_option:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'>  <span class="k">RESTRICT</span> <span class="o">|</span> <span class="k">CASCADE</span> <span class="o">|</span> <span class="k">SET</span> <span class="k">NULL</span> <span class="o">|</span> <span class="k">NO</span> <span class="n">ACTION</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Оператор ALTER</h2>

<p>Общая сигнатура такова:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'>  <span class="k">ALTER</span> <span class="p">[</span><span class="n">ONLINE</span><span class="o">|</span><span class="n">OFFLINE</span><span class="p">]</span> <span class="p">[</span><span class="k">IGNORE</span><span class="p">]</span> <span class="k">TABLE</span> <span class="n">tbl_name</span>
</span><span class='line'>      <span class="p">[</span><span class="n">alter_specification</span> <span class="p">[,</span> <span class="n">alter_specification</span><span class="p">]</span> <span class="p">...]</span>
</span><span class='line'>      <span class="p">[</span><span class="n">partition_options</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Где alter_specification:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'>  <span class="n">table_options</span>
</span><span class='line'>    <span class="o">|</span> <span class="k">ADD</span> <span class="p">[</span><span class="k">COLUMN</span><span class="p">]</span> <span class="n">col_name</span> <span class="n">column_definition</span>
</span><span class='line'>          <span class="p">[</span><span class="k">FIRST</span> <span class="o">|</span> <span class="k">AFTER</span> <span class="n">col_name</span> <span class="p">]</span>
</span><span class='line'>    <span class="o">|</span> <span class="k">ADD</span> <span class="p">[</span><span class="k">COLUMN</span><span class="p">]</span> <span class="p">(</span><span class="n">col_name</span> <span class="n">column_definition</span><span class="p">,...)</span>
</span><span class='line'>    <span class="o">|</span> <span class="k">ADD</span> <span class="err">{</span><span class="k">INDEX</span><span class="o">|</span><span class="k">KEY</span><span class="err">}</span> <span class="p">[</span><span class="n">index_name</span><span class="p">]</span>
</span><span class='line'>          <span class="p">[</span><span class="n">index_type</span><span class="p">]</span> <span class="p">(</span><span class="n">index_col_name</span><span class="p">,...)</span> <span class="p">[</span><span class="n">index_option</span><span class="p">]</span> <span class="p">...</span>
</span><span class='line'>    <span class="o">|</span> <span class="k">ADD</span> <span class="p">[</span><span class="k">CONSTRAINT</span> <span class="p">[</span><span class="n">symbol</span><span class="p">]]</span> <span class="k">PRIMARY</span> <span class="k">KEY</span>
</span><span class='line'>          <span class="p">[</span><span class="n">index_type</span><span class="p">]</span> <span class="p">(</span><span class="n">index_col_name</span><span class="p">,...)</span> <span class="p">[</span><span class="n">index_option</span><span class="p">]</span> <span class="p">...</span>
</span><span class='line'>    <span class="o">|</span> <span class="k">ADD</span> <span class="p">[</span><span class="k">CONSTRAINT</span> <span class="p">[</span><span class="n">symbol</span><span class="p">]]</span>
</span><span class='line'>          <span class="k">UNIQUE</span> <span class="p">[</span><span class="k">INDEX</span><span class="o">|</span><span class="k">KEY</span><span class="p">]</span> <span class="p">[</span><span class="n">index_name</span><span class="p">]</span>
</span><span class='line'>          <span class="p">[</span><span class="n">index_type</span><span class="p">]</span> <span class="p">(</span><span class="n">index_col_name</span><span class="p">,...)</span> <span class="p">[</span><span class="n">index_option</span><span class="p">]</span> <span class="p">...</span>
</span><span class='line'>    <span class="o">|</span> <span class="k">ADD</span> <span class="n">FULLTEXT</span> <span class="p">[</span><span class="k">INDEX</span><span class="o">|</span><span class="k">KEY</span><span class="p">]</span> <span class="p">[</span><span class="n">index_name</span><span class="p">]</span>
</span><span class='line'>          <span class="p">(</span><span class="n">index_col_name</span><span class="p">,...)</span> <span class="p">[</span><span class="n">index_option</span><span class="p">]</span> <span class="p">...</span>
</span><span class='line'>    <span class="o">|</span> <span class="k">ADD</span> <span class="n">SPATIAL</span> <span class="p">[</span><span class="k">INDEX</span><span class="o">|</span><span class="k">KEY</span><span class="p">]</span> <span class="p">[</span><span class="n">index_name</span><span class="p">]</span>
</span><span class='line'>          <span class="p">(</span><span class="n">index_col_name</span><span class="p">,...)</span> <span class="p">[</span><span class="n">index_option</span><span class="p">]</span> <span class="p">...</span>
</span><span class='line'>    <span class="o">|</span> <span class="k">ADD</span> <span class="p">[</span><span class="k">CONSTRAINT</span> <span class="p">[</span><span class="n">symbol</span><span class="p">]]</span>
</span><span class='line'>          <span class="k">FOREIGN</span> <span class="k">KEY</span> <span class="p">[</span><span class="n">index_name</span><span class="p">]</span> <span class="p">(</span><span class="n">index_col_name</span><span class="p">,...)</span>
</span><span class='line'>          <span class="n">reference_definition</span>
</span><span class='line'>    <span class="o">|</span> <span class="n">ALGORITHM</span> <span class="p">[</span><span class="o">=</span><span class="p">]</span> <span class="err">{</span><span class="k">DEFAULT</span><span class="o">|</span><span class="n">INPLACE</span><span class="o">|</span><span class="k">COPY</span><span class="err">}</span>
</span><span class='line'>    <span class="o">|</span> <span class="k">ALTER</span> <span class="p">[</span><span class="k">COLUMN</span><span class="p">]</span> <span class="n">col_name</span> <span class="err">{</span><span class="k">SET</span> <span class="k">DEFAULT</span> <span class="n">literal</span> <span class="o">|</span> <span class="k">DROP</span> <span class="k">DEFAULT</span><span class="err">}</span>
</span><span class='line'>    <span class="o">|</span> <span class="n">CHANGE</span> <span class="p">[</span><span class="k">COLUMN</span><span class="p">]</span> <span class="n">old_col_name</span> <span class="n">new_col_name</span> <span class="n">column_definition</span>
</span><span class='line'>          <span class="p">[</span><span class="k">FIRST</span><span class="o">|</span><span class="k">AFTER</span> <span class="n">col_name</span><span class="p">]</span>
</span><span class='line'>    <span class="o">|</span> <span class="k">LOCK</span> <span class="p">[</span><span class="o">=</span><span class="p">]</span> <span class="err">{</span><span class="k">DEFAULT</span><span class="o">|</span><span class="k">NONE</span><span class="o">|</span><span class="n">SHARED</span><span class="o">|</span><span class="k">EXCLUSIVE</span><span class="err">}</span>
</span><span class='line'>    <span class="o">|</span> <span class="k">MODIFY</span> <span class="p">[</span><span class="k">COLUMN</span><span class="p">]</span> <span class="n">col_name</span> <span class="n">column_definition</span>
</span><span class='line'>          <span class="p">[</span><span class="k">FIRST</span> <span class="o">|</span> <span class="k">AFTER</span> <span class="n">col_name</span><span class="p">]</span>
</span><span class='line'>    <span class="o">|</span> <span class="k">DROP</span> <span class="p">[</span><span class="k">COLUMN</span><span class="p">]</span> <span class="n">col_name</span>
</span><span class='line'>    <span class="o">|</span> <span class="k">DROP</span> <span class="k">PRIMARY</span> <span class="k">KEY</span>
</span><span class='line'>    <span class="o">|</span> <span class="k">DROP</span> <span class="err">{</span><span class="k">INDEX</span><span class="o">|</span><span class="k">KEY</span><span class="err">}</span> <span class="n">index_name</span>
</span><span class='line'>    <span class="o">|</span> <span class="k">DROP</span> <span class="k">FOREIGN</span> <span class="k">KEY</span> <span class="n">fk_symbol</span>
</span><span class='line'>    <span class="o">|</span> <span class="n">DISABLE</span> <span class="n">KEYS</span>
</span><span class='line'>    <span class="o">|</span> <span class="n">ENABLE</span> <span class="n">KEYS</span>
</span><span class='line'>    <span class="o">|</span> <span class="k">RENAME</span> <span class="p">[</span><span class="k">TO</span><span class="o">|</span><span class="k">AS</span><span class="p">]</span> <span class="n">new_tbl_name</span>
</span><span class='line'>    <span class="o">|</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">col_name</span> <span class="p">[,</span> <span class="n">col_name</span><span class="p">]</span> <span class="p">...</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Ограничения (CONSTRAINT) на значения данных</h2>

<p><strong>Составной первичный ключ:</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'>  <span class="k">CREATE</span> <span class="n">TABEL</span> <span class="k">table_name</span> <span class="p">(</span>
</span><span class='line'>      <span class="n">firstname</span> <span class="nb">CHAR</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>      <span class="n">lastname</span> <span class="nb">CHAR</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>      <span class="n">city</span> <span class="nb">CHAR</span><span class="p">(</span><span class="mi">10</span><span class="p">),</span>
</span><span class='line'>      <span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="p">(</span><span class="n">firstname</span><span class="p">,</span> <span class="n">lastname</span><span class="p">)</span>
</span><span class='line'>  <span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Проверка вводимых значений CHECK:</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'>  <span class="k">CREATE</span> <span class="n">TABEL</span> <span class="k">table_name</span> <span class="p">(</span>
</span><span class='line'>      <span class="n">id</span> <span class="nb">INTEGER</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">,</span>
</span><span class='line'>      <span class="n">firstname</span> <span class="nb">CHAR</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>      <span class="n">comm</span> <span class="nb">DECIMAL</span><span class="p">,</span>
</span><span class='line'>      <span class="n">city</span> <span class="nb">CHAR</span><span class="p">(</span><span class="mi">10</span><span class="p">),</span>
</span><span class='line'>      <span class="k">CHECK</span><span class="p">(</span><span class="n">comm</span> <span class="o">&lt;</span> <span class="p">.</span><span class="mi">15</span> <span class="k">OR</span> <span class="n">city</span> <span class="o">=</span> <span class="s1">&#39;Barcelona&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Именование ограничений и удаление их:</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'>  <span class="k">CREATE</span> <span class="n">TABEL</span> <span class="k">table_name</span> <span class="p">(</span>
</span><span class='line'>      <span class="n">id</span> <span class="nb">INTEGER</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">,</span>
</span><span class='line'>      <span class="n">firstname</span> <span class="nb">CHAR</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>      <span class="n">comm</span> <span class="nb">DECIMAL</span><span class="p">,</span>
</span><span class='line'>      <span class="n">city</span> <span class="nb">CHAR</span><span class="p">(</span><span class="mi">10</span><span class="p">),</span>
</span><span class='line'>      <span class="k">CONSTRAINT</span> <span class="n">LuckyBarcelona</span> <span class="k">CHECK</span><span class="p">(</span><span class="n">comm</span> <span class="o">&lt;</span> <span class="p">.</span><span class="mi">15</span> <span class="k">OR</span> <span class="n">city</span> <span class="o">=</span> <span class="s1">&#39;Barcelona&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>CONSTRAINT — является не обязательным;<br>
<em>Использование: </em><br>
ALTER TABLE table_name DROP CONSTRAINT  LuckyBarcelona</p></blockquote>

<p><strong>Добавление внешнего ключа через alter table:</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'>  <span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">Salespeople</span> <span class="k">ADD</span> <span class="k">FOREIGN</span> <span class="k">KEY</span> <span class="p">(</span><span class="k">column</span><span class="p">)</span> <span class="k">REFERENCES</span> <span class="n">Customers</span> <span class="p">(</span><span class="k">column</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Действия выполняемые по ссылке:</h3>

<p><strong>CASCADE:</strong>
    - п и UPDATE — значение внешнего ключа заменяется новым значением;
    -   п и DELETE — строки внеш. Ключа будут удалены.</p>

<p><strong>SET NULL</strong> — значения внешнего ключа будут установлены в NULL.</p>

<p><strong>SET DEFAULT</strong> — будет установлено зн-е по дефолту для внешнего ключа.</p>

<p><strong>NO ACTION</strong> — значение по дефолту, зн-е не меняется но если есть ссылки оператор игнорируется.</p>

<p><em>Пример:</em></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'>  <span class="k">CREATE</span> <span class="n">TABEL</span> <span class="k">table_name</span> <span class="p">(</span>
</span><span class='line'>      <span class="n">id</span> <span class="nb">INTEGER</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">,</span>
</span><span class='line'>      <span class="n">firstname</span> <span class="nb">CHAR</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>      <span class="n">snum</span> <span class="nb">INTEGER</span> <span class="k">REFERENCES</span> <span class="n">other_table</span>
</span><span class='line'>          <span class="k">ON</span> <span class="k">UPDATE</span> <span class="k">CASCADE</span> <span class="k">ON</span> <span class="k">DELETE</span> <span class="k">NO</span> <span class="n">ACTION</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Три способа вычисления числа Фибоначчи]]></title>
    <link href="http://fizikovnet.github.io/posts/2015/03/tri-sposoba-vychisleniya-chisla-fibonachchi.html"/>
    <updated>2015-03-08T12:34:42+03:00</updated>
    <id>http://fizikovnet.github.io/posts/2015/03/tri-sposoba-vychisleniya-chisla-fibonachchi</id>
    <content type="html"><![CDATA[<p>Вычисление n-го числа Фибоначчи - популярная задача, которая на практике почти не встречается, но часто прменяется в обучающих целях, а также на собеседованиях. Задача очень проста, но решить ее можно несколькими алгоритмами, причем время выполнения таких алгоритмов может сильно различаться между собой.</p>

<!-- more -->


<h4>Понятие числа Фибоначчи:</h4>

<p>Итак, простой пример последовательности Фибоначчи (каждое последующее число равно сумме двух предыдущих):</p>

<pre><code>0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, ... .
</code></pre>

<p>Рекуррентное соотношение таково:</p>

<pre><code>F(0) = 0,
F(1) = 1,
F(i) = F(i−1) + F(i−2), где i &gt;= 2.
</code></pre>

<h4>Первый способ</h4>

<p>Самый простой алгоритм для вычисления такого числа, который дается во всех книжках, это алгоритм основанный на рекурсии:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">fibonacci1</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">n</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">n</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="nf">fibonacci1</span><span class="o">(</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="n">fibonacci1</span><span class="o">(</span><span class="n">n</span> <span class="o">-</span> <span class="mi">2</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Это простой, но и самый неэффективный алгоритм, так как время алгоритма растет экспоненциально - <code>O(2^n)</code>.
Рекурсивное дерево вызовов выглядит следующим образом:</p>

<p><img src="http://fizikovnet.github.io/images/img_2015_03/11.png" alt="" /></p>

<h4>Второй способ</h4>

<p>Второй способ основан на принципе с сохранением каждого предыдущего числа последовательности в массиве. Такой алгоритм требует уже линейное время - <code>O(n)</code> на выполнение и дополнительное количество памяти для хранения всего массива чисел - <code>O(n)</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">fibonacci2</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kt">int</span><span class="o">[]</span> <span class="n">a</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
</span><span class='line'>        <span class="n">a</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>        <span class="n">a</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">+</span> <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">2</span><span class="o">];</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">a</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Третий способ</h4>

<p>Третий способ похож на первый, за исключением того, что, мы будем хранить не весь массив вычисленных чиел, а только предыдущие два. Таким образом, колчиство дополнительной памяти сократится до <code>O(1)</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">fibonacci3</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">fPrev</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">fCurrent</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">fNext</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">fNext</span> <span class="o">=</span> <span class="n">fPrev</span> <span class="o">+</span> <span class="n">fCurrent</span><span class="o">;</span>
</span><span class='line'>            <span class="n">fPrev</span> <span class="o">=</span> <span class="n">fCurrent</span><span class="o">;</span>
</span><span class='line'>            <span class="n">fCurrent</span> <span class="o">=</span> <span class="n">fNext</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">fNext</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Алгоритм быстрой сортировки (Quick Sort)]]></title>
    <link href="http://fizikovnet.github.io/posts/2015/03/alghoritm-bystroi-sortirovki-quick-sort.html"/>
    <updated>2015-03-05T21:28:03+03:00</updated>
    <id>http://fizikovnet.github.io/posts/2015/03/alghoritm-bystroi-sortirovki-quick-sort</id>
    <content type="html"><![CDATA[<p>Далее представлен краткий конспект разбора алгоритма быстрой сортировки по книге &laquo;Алгоритмы. Построение и анализ&raquo;
(Томас Кормен, Чарльз Лейзерсон, Рональд Ривест, Клиффорд Штайн). Примеры кода написаны на языке Java.</p>

<!-- more -->


<p><strong>Время работы</strong></p>

<ul>
<li>Наихудший вариант: <code>O(n^2)</code></li>
<li>В среднем случае: <code>O(n*logn)</code></li>
</ul>


<p><strong>Свойства:</strong></p>

<ul>
<li>Не требует дополнительной памяти, работает с тем же массивом данных. Использует принцип “разделяй и властвуй”.  В большинстве случаев работает за время <code>O(n* logn)</code> и является одним из самых эффективных методов сортировки.</li>
</ul>


<h3>Принцип работы:</h3>

<ol>
<li>Выбирается опорный элемент (рандомно, либо последний/первый элемент в массиве, либо среднее арифметическое, если массив состоит из чисел)</li>
<li>Массив разбивается на два подмассива, в одном элементы не больше опорного, в другом не меньше опорного</li>
<li>Полученные подмассивы сортируются рекурсивно вызовом процедуры быстрой сортировки</li>
</ol>


<h3>Метод быстрой сортировки:</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * @param a[] - входящий массив</span>
</span><span class='line'><span class="cm">     * @param l - индекс крайне левого элемента, с которого начать сравнивания</span>
</span><span class='line'><span class="cm">     * @param r  - индекс крайне правого элемента, с которого начать сравнивания</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">quickSort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">l</span><span class="o">,</span> <span class="kt">int</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">l</span> <span class="o">&lt;</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">q</span> <span class="o">=</span> <span class="n">partition</span><span class="o">(</span><span class="n">a</span><span class="o">,</span> <span class="n">l</span><span class="o">,</span> <span class="n">r</span><span class="o">);</span>
</span><span class='line'>            <span class="n">quickSort</span><span class="o">(</span><span class="n">a</span><span class="o">,</span> <span class="n">l</span><span class="o">,</span> <span class="n">q</span><span class="o">);</span>
</span><span class='line'>            <span class="n">quickSort</span><span class="o">(</span><span class="n">a</span><span class="o">,</span> <span class="n">q</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="n">r</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>Для запуска сортировки необходимо выполнить: quickSort(array, 0, array.length - 1);</em></p>

<h3>Метод разбиения массива</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="kd">private</span> <span class="kt">int</span> <span class="nf">partition</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">l</span><span class="o">,</span> <span class="kt">int</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">l</span><span class="o">;</span> <span class="c1">// метка на следующий элемент после меньшей части опорного</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">pivot</span> <span class="o">=</span> <span class="n">a</span><span class="o">[</span><span class="n">r</span><span class="o">];</span> <span class="c1">//опорный элемент, относительно которого идут сравнения</span>
</span><span class='line'>        <span class="k">for</span> <span class="o">(</span> <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">l</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">r</span><span class="o">;</span> <span class="n">i</span><span class="o">++</span> <span class="o">)</span> <span class="c1">// цикл от начального до конечного</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span> <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">&lt;=</span> <span class="n">pivot</span> <span class="o">)</span>
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="c1">// если текущий элемент меньше опроного, то меняем местами текущий элемент</span>
</span><span class='line'>                <span class="c1">// и элемент на который указывает метка следующего элемента за меньшими опроными</span>
</span><span class='line'>                <span class="n">swap</span><span class="o">(</span><span class="n">a</span><span class="o">,</span> <span class="n">i</span><span class="o">,</span> <span class="n">x</span><span class="o">);</span>
</span><span class='line'>                <span class="n">x</span><span class="o">++;</span> <span class="c1">// увеличиваем метку, т.к. до этой метки остались только элементы меньшие опроному</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="o">--</span><span class="n">x</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>Пример работы из книги Кормена:</em><br>
<img src="http://fizikovnet.github.io/images/img_2015_03/8.png" alt="" /> <br>
    <em>Небольшое отличие: в коде x - здесь можно считать i + 1, а счетчик i в коде здесь - это j</em></p>

<p><em>Пример разделения массива в середине работы процедуры partition:</em>
<img src="http://fizikovnet.github.io/images/img_2015_03/9.png" alt="" />
<img src="http://fizikovnet.github.io/images/img_2015_03/10.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Алгоритм пирамидальной сортировки (сортировка кучей)]]></title>
    <link href="http://fizikovnet.github.io/posts/2015/03/alghoritm-piramidalnoi-sortirovki-sortirovka-kuchiei.html"/>
    <updated>2015-03-04T20:56:38+03:00</updated>
    <id>http://fizikovnet.github.io/posts/2015/03/alghoritm-piramidalnoi-sortirovki-sortirovka-kuchiei</id>
    <content type="html"><![CDATA[<p>Далее представлен краткий конспект разбора пирамидальной сортировки по книге &laquo;Алгоритмы. Построение и анализ&raquo;
(Томас Кормен, Чарльз Лейзерсон, Рональд Ривест, Клиффорд Штайн). Примеры кода написаны на языке Java.</p>

<!-- more -->


<p><strong>Время работы</strong> - <code>O(n*logn).</code><br>
<strong>Свойства:</strong></p>

<ul>
<li>Не требует дополнительной памяти, работает с тем же массивом данных.</li>
<li>Используется структура данных - <a href="https://ru.wikipedia.org/wiki/%D0%94%D0%B2%D0%BE%D0%B8%D1%87%D0%BD%D0%B0%D1%8F_%D0%BA%D1%83%D1%87%D0%B0">Двоичное дерево (куча)</a> .</li>
</ul>


<h3>Принцип работы:</h3>

<ol>
<li>Строим пирамиду</li>
<li>Сохраняем размер массива в отдельную переменную</li>
<li>Так как максимальный элемент находится в корне т.е. a[0], то меняем местами с последним элементом массива, и уменьшаем размер переменной в которой у нас записан размер массива</li>
<li>Вызываем метод поддержки свойств пирамиды heapify(array, 0)</li>
</ol>


<p><em>Бинарное дерево с максимальным элементом в корне</em>
<img src="http://fizikovnet.github.io/images/img_2015_03/1.png" alt="" /> <br></p>

<p><em>Представление бинарного дерева в виде массива</em><br>
<img src="http://fizikovnet.github.io/images/img_2015_03/2.png" alt="" /><br></p>

<h3>Родитель и потомки любого узла вычисляются по следующем методам:</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * @param int i</span>
</span><span class='line'><span class="cm">     * @return int</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * применяем побитовый сдвиг влево для быстрого увеличения индекса в 2 раза</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="nf">left</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">i</span> <span class="o">&lt;&lt;</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * @param int i</span>
</span><span class='line'><span class="cm">     * @return int</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="nf">right</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="o">(</span><span class="n">i</span> <span class="o">&lt;&lt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * @param int i</span>
</span><span class='line'><span class="cm">     * @return int</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * прменяем побитовый сдвиг вправо для быстрого уменьшения индекса в 2 раза</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">parent</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">i</span> <span class="o">&gt;&gt;</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Метод поддержки свойств пирамиды:</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * @param int[] arr</span>
</span><span class='line'><span class="cm">     * @param int length</span>
</span><span class='line'><span class="cm">     * @param int i </span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">maxHeapify</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span><span class="o">,</span> <span class="kt">int</span> <span class="n">length</span><span class="o">,</span> <span class="kt">int</span> <span class="n">i</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">left</span> <span class="o">=</span> <span class="n">left</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">right</span> <span class="o">=</span> <span class="n">right</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">largest</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">left</span> <span class="o">&lt;</span> <span class="n">length</span> <span class="o">&amp;&amp;</span> <span class="n">arr</span><span class="o">[</span><span class="n">left</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">largest</span> <span class="o">=</span> <span class="n">left</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">right</span> <span class="o">&lt;</span> <span class="n">length</span> <span class="o">&amp;&amp;</span> <span class="n">arr</span><span class="o">[</span><span class="n">right</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">arr</span><span class="o">[</span><span class="n">largest</span><span class="o">])</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">largest</span> <span class="o">=</span> <span class="n">right</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">largest</span> <span class="o">!=</span> <span class="n">i</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">swap</span><span class="o">(</span><span class="n">arr</span><span class="o">,</span> <span class="n">i</span><span class="o">,</span> <span class="n">largest</span><span class="o">);</span>
</span><span class='line'>            <span class="n">maxHeapify</span><span class="o">(</span><span class="n">arr</span><span class="o">,</span> <span class="n">length</span><span class="o">,</span> <span class="n">largest</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>Пример работы</em>
<img src="http://fizikovnet.github.io/images/img_2015_03/3.png" alt="" /></p>

<h3>Метод создания пирамиды</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * @param int[] arr </span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">buildMaxHeap</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">arr</span><span class="o">.</span><span class="na">length</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span> <span class="n">i</span> <span class="o">&gt;=</span><span class="mi">0</span><span class="o">;</span> <span class="o">--</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">maxHeapify</span><span class="o">(</span><span class="n">arr</span><span class="o">,</span> <span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">,</span> <span class="n">i</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>Пример работы построения кучи из массива A</em>
<img src="http://fizikovnet.github.io/images/img_2015_03/4.png" alt="" />
<img src="http://fizikovnet.github.io/images/img_2015_03/5.png" alt="" /></p>

<h3>Метод сортировки:</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * @param int[] arr </span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">heapSort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">buildMaxHeap</span><span class="o">(</span><span class="n">arr</span><span class="o">);</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="n">arr</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>        <span class="k">while</span> <span class="o">(</span><span class="n">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">swap</span><span class="o">(</span><span class="n">arr</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">length</span><span class="o">);</span>
</span><span class='line'>            <span class="n">maxHeapify</span><span class="o">(</span><span class="n">arr</span><span class="o">,</span> <span class="n">length</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>            <span class="n">length</span><span class="o">--;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>Пример работы алгоритма пирамидальной сортировки</em>
<img src="http://fizikovnet.github.io/images/img_2015_03/6.png" alt="" />
<img src="http://fizikovnet.github.io/images/img_2015_03/7.png" alt="" /></p>
]]></content>
  </entry>
  
</feed>
